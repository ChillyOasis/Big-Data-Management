SELECT ORDERS.O_ORDERDATE, LINEITEM.L_SUPPKEY, SUM(LINEITEM.L_QUANTITY) AS PartsQuantity
FROM ORDERS LEFT OUTER JOIN LINEITEM
ON ORDERS.O_ORDERKEY = LINEITEM.L_ORDERKEY
WHERE ORDERS.O_CLERK = 'Clerk#000000522'
OR ORDERS.O_CLERK = 'Clerk#000000154'
GROUP BY ORDERS.O_ORDERDATE, LINEITEM.L_SUPPKEY WITH CUBE;

SELECT L_PARTKEY, L_SUPPKEY, MAX(L_DISCOUNT) AS MaxDiscount
FROM LINEITEM
WHERE L_PARTKEY = 7 OR L_PARTKEY = 8 OR L_PARTKEY = 9
GROUP BY L_PARTKEY, L_SUPPKEY WITH ROLLUP;

SELECT ORDERS.O_CLERK , SUBSTRING(ORDERS.O_ORDERDATE, 1, 4) AS OrderYear, MIN(LINEITEM.L_QUANTITY) AS SmallestQuantity
FROM ORDERS INNER JOIN LINEITEM
ON ORDERS.O_ORDERKEY = LINEITEM.L_ORDERKEY
GROUP BY ORDERS.O_CLERK, SUBSTRING(ORDERS.O_ORDERDATE, 1, 4)
GROUPING SETS((ORDERS.O_CLERK), (SUBSTRING(ORDERS.O_ORDERDATE, 1, 4)));

SELECT DISTINCT L_SUPPKEY, MIN(L_TAX) OVER (PARTITION BY L_SUPPKEY) AS SmallestTax
FROM LINEITEM;

SELECT LINEITEM.L_PARTKEY, SUBSTRING(ORDERS.O_ORDERDATE, 1, 4) AS OrderYear, AVG(LINEITEM.L_QUANTITY) AS AverageQuantity, MAX(LINEITEM.L_QUANTITY) AS MaxQuantity
FROM LINEITEM INNER JOIN ORDERS
ON LINEITEM.L_ORDERKEY = ORDERS.O_ORDERKEY
WHERE LINEITEM.L_PARTKEY = 5
OR LINEITEM.L_PARTKEY = 6
OR LINEITEM.L_PARTKEY = 7
OR LINEITEM.L_PARTKEY = 8
OR LINEITEM.L_PARTKEY = 9
GROUP BY LINEITEM.L_PARTKEY, SUBSTRING(ORDERS.O_ORDERDATE, 1, 4)
GROUPING SETS ((LINEITEM.L_PARTKEY), (LINEITEM.L_PARTKEY, SUBSTRING(ORDERS.O_ORDERDATE, 1, 4)));
